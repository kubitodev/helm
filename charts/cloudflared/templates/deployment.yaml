apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount | int }}
  {{- end }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
      {{- if .Values.local.enabled }}
      annotations:
        checksum/tunnel-id: {{ sha256sum .Values.local.auth.tunnelID }}
        checksum/ingress: {{ .Values.ingress | toJson | sha256sum }}
        checksum/auth: {{ .Values.auth | toJson | sha256sum }}
        checksum/warp-routing: {{ .Values.warpRouting | toJson | sha256sum }}
      {{- end }}
    spec:
      containers:
      - args:
        - tunnel
        - --no-autoupdate
        {{- if .Values.metrics.enabled }}
        - --metrics
        - "0.0.0.0:{{ .Values.metrics.port }}"
        {{ end }}
        {{- if .Values.local.enabled }}
        - --config
        - /etc/cloudflared/config.yaml
        - run
        {{- else if .Values.managed.enabled }}
        {{- if .Values.logLevel }}
        - --loglevel
        - {{ .Values.logLevel }}
        {{- end }}
        - run
        - --token
        - $(CF_MANAGED_TUNNEL_TOKEN)
        {{- end }}
        name: {{ .Release.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.imagePullPolicy }}
        {{- if .Values.managed.enabled }}
        env:
        - name: CF_MANAGED_TUNNEL_TOKEN
          {{- if .Values.managed.existingSecret }}
          valueFrom:
            secretKeyRef:
              name: {{ .Values.managed.existingSecret }}
              key: cf-tunnel-token
          {{- else }}
          value: {{ .Values.managed.token }}
          {{- end }}
        {{- end }}
        {{- if .Values.metrics.enabled }}
        ports:
         - name: metrics
           containerPort: {{ .Values.metrics.port }}
        {{ end }}
        {{- if .Values.local.enabled }}
        volumeMounts:
        - mountPath: /etc/cloudflared/tunnel-config.json
          name: tunnel-secret-volume
          subPath: tunnel-config.json
        - mountPath: /etc/cloudflared/config.yaml
          name: cloudflared-config-volume
          subPath: config.yaml
        {{- end }}
        {{- with .Values.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      {{- if .Values.local.enabled }}
      volumes:
      - name: tunnel-secret-volume
        secret:
          defaultMode: 420
          optional: false
          secretName: {{ default "tunnel-secret" .Values.local.auth.existingSecret }}
      - name: cloudflared-config-volume
        configMap:
          defaultMode: 420
          name: {{ .Release.Name }}
          optional: false
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
